import{_ as n,f as s}from"./app.06d697e7.js";const a={},p=s(`<h1 id="comptetablefuture\u5F02\u6B65\u7F16\u6392" tabindex="-1"><a class="header-anchor" href="#comptetablefuture\u5F02\u6B65\u7F16\u6392" aria-hidden="true">#</a> ComptetableFuture\u5F02\u6B65\u7F16\u6392</h1><h2 id="_1-\u7EBF\u7A0B\u56DE\u987E" tabindex="-1"><a class="header-anchor" href="#_1-\u7EBF\u7A0B\u56DE\u987E" aria-hidden="true">#</a> 1.\u7EBF\u7A0B\u56DE\u987E</h2><h3 id="_1-1\u521D\u59CB\u5316\u7EBF\u7A0B\u7684\u51E0\u79CD\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_1-1\u521D\u59CB\u5316\u7EBF\u7A0B\u7684\u51E0\u79CD\u65B9\u5F0F" aria-hidden="true">#</a> 1.1\u521D\u59CB\u5316\u7EBF\u7A0B\u7684\u51E0\u79CD\u65B9\u5F0F</h3><p>1.\u7EE7\u627FThread\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThreadCreate</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E00:\u7EE7\u627FThread\u7C7B
          */</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u5E76\u542F\u52A8\u7EBF\u7A0B
         */</span>
        <span class="token keyword">new</span> <span class="token class-name">TestThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">TestThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E00:\u7EE7\u627FThread\u7C7B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>2.\u5B9E\u73B0Runable\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThreadCreate</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E00:\u7EE7\u627FThread\u7C7B\uFF0C\u5E76\u91CD\u5199run\u65B9\u6CD5
          */</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u5E76\u542F\u52A8\u7EBF\u7A0B
         */</span>
<span class="token comment">//        new TestThread().start();</span>

        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E8C:\u5B9E\u73B0Runable\u63A5\u53E3\uFF0C\u5E76\u91CD\u5199run\u65B9\u6CD5
         */</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TestRunable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">TestRunable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E8C:\u5B9E\u73B0Runable\u63A5\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>3.\u5B9E\u73B0Callable\u63A5\u53E3+FutureTask(\u53EF\u4EE5\u62FF\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53EF\u4EE5\u5904\u7406\u5F02\u5E38)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThreadCreate</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E00:\u7EE7\u627FThread\u7C7B\uFF0C\u5E76\u91CD\u5199run\u65B9\u6CD5
         */</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u5E76\u542F\u52A8\u7EBF\u7A0B
         */</span>
<span class="token comment">//        new TestThread().start();</span>

        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E8C:\u5B9E\u73B0Runable\u63A5\u53E3\uFF0C\u5E76\u91CD\u5199run\u65B9\u6CD5
         */</span>
<span class="token comment">//        new Thread(new TestRunable()).start();</span>

        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E09:\u5B9E\u73B0Callable\u63A5\u53E3+FutureTask(\u53EF\u4EE5\u62FF\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53EF\u4EE5\u5904\u7406\u5F02\u5E38)
         */</span>
        <span class="token class-name">FutureTask</span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TestCallable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token doc-comment comment">/**
         * \u4F7F\u7528lambda\u8868\u8FBE\u5F0F\u521B\u5EFA
         */</span>
        <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringFutureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;\u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E09:\u5B9E\u73B0Callable\u63A5\u53E3+FutureTask(\u53EF\u4EE5\u62FF\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53EF\u4EE5\u5904\u7406\u5F02\u5E38)&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>stringFutureTask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stringFutureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">TestCallable</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E09:\u5B9E\u73B0Callable\u63A5\u53E3+FutureTask(\u53EF\u4EE5\u62FF\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53EF\u4EE5\u5904\u7406\u5F02\u5E38)&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><p>4.\u7EBF\u7A0B\u6C60</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThreadCreate</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E00:\u7EE7\u627FThread\u7C7B\uFF0C\u5E76\u91CD\u5199run\u65B9\u6CD5
         */</span>
        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u5E76\u542F\u52A8\u7EBF\u7A0B
         */</span>
<span class="token comment">//        new TestThread().start();</span>

        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E8C:\u5B9E\u73B0Runable\u63A5\u53E3\uFF0C\u5E76\u91CD\u5199run\u65B9\u6CD5
         */</span>
<span class="token comment">//        new Thread(new TestRunable()).start();</span>

        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E09:\u5B9E\u73B0Callable\u63A5\u53E3+FutureTask(\u53EF\u4EE5\u62FF\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53EF\u4EE5\u5904\u7406\u5F02\u5E38)
         */</span>
<span class="token comment">//        FutureTask futureTask = new FutureTask&lt;String&gt;(new TestCallable());</span>
<span class="token comment">//        new Thread(futureTask).start();</span>
<span class="token comment">//        try {</span>
<span class="token comment">//            System.out.println(futureTask.get());</span>
<span class="token comment">//        } catch (Exception e) {</span>
<span class="token comment">//            e.printStackTrace();</span>
<span class="token comment">//        }</span>
        <span class="token doc-comment comment">/**
         * \u4F7F\u7528lambda\u8868\u8FBE\u5F0F\u521B\u5EFA
         */</span>
<span class="token comment">//        FutureTask&lt;String&gt; stringFutureTask = new FutureTask&lt;&gt;(() -&gt; {</span>
<span class="token comment">//            return &quot;\u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u4E09:\u5B9E\u73B0Callable\u63A5\u53E3+FutureTask(\u53EF\u4EE5\u62FF\u5230\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53EF\u4EE5\u5904\u7406\u5F02\u5E38)&quot;;</span>
<span class="token comment">//        });</span>
<span class="token comment">//        new Thread(stringFutureTask).start();</span>
<span class="token comment">//        try {</span>
<span class="token comment">//            System.out.println(stringFutureTask.get());</span>
<span class="token comment">//        } catch (InterruptedException e) {</span>
<span class="token comment">//            e.printStackTrace();</span>
<span class="token comment">//        } catch (ExecutionException e) {</span>
<span class="token comment">//            e.printStackTrace();</span>
<span class="token comment">//        }</span>

        <span class="token doc-comment comment">/**
         * \u521B\u5EFA\u7EBF\u7A0B\u7684\u65B9\u5F0F\u56DB:\u7EBF\u7A0B\u6C60
         */</span>
        <span class="token comment">//\u7F13\u5B58\u578B\u6C60\u5B50---\u9002\u7528\u4E8E\u751F\u5B58\u671F\u5F88\u77ED\u7684\u5F02\u6B65\u4EFB\u52A1</span>
        <span class="token class-name">ExecutorService</span> newCachedThreadPool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u56FA\u5B9A\u5927\u5C0F\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token class-name">ExecutorService</span> newFixedThreadPool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8C03\u5EA6\u578B\u7EBF\u7A0B\u6C60</span>
        <span class="token class-name">ScheduledExecutorService</span> newScheduledThreadPool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5355\u4F8B\u7EBF\u7A0B---\u4EFB\u610F\u65F6\u95F4\u6C60\u4E2D\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B</span>
        <span class="token class-name">ExecutorService</span> newSingleThreadExecutor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newFixedThreadPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TestRunable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;*******************&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        newCachedThreadPool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p><strong>\u56DB\u79CD\u521B\u5EFA\u7EBF\u7A0B\u65B9\u5F0F\u7684\u6BD4\u8F83\uFF1A</strong></p><p>\u65B9\u5F0F 1 \u548C\u65B9\u5F0F 2\uFF1A\u4E3B\u8FDB\u7A0B\u65E0\u6CD5\u83B7\u53D6\u7EBF\u7A0B\u7684\u8FD0\u7B97\u7ED3\u679C\u3002</p><p>\u65B9\u5F0F 3\uFF1A\u4E3B\u8FDB\u7A0B\u53EF\u4EE5\u83B7\u53D6\u7EBF\u7A0B\u7684\u8FD0\u7B97\u7ED3\u679C\uFF0C\u4F46\u662F\u4E0D\u5229\u4E8E\u63A7\u5236\u670D\u52A1\u5668\u4E2D\u7684\u7EBF\u7A0B\u8D44\u6E90\u3002\u53EF\u4EE5\u5BFC\u81F4</p><p>\u670D\u52A1\u5668\u8D44\u6E90\u8017\u5C3D\u3002</p><p>\u65B9\u5F0F 4\uFF1A\u901A\u8FC7\u5982\u4E0B\u4E24\u79CD\u65B9\u5F0F\u521D\u59CB\u5316\u7EBF\u7A0B\u6C60</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFiexedThreadPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">//\u6216\u8005 </span>

<span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> maximumPoolSize<span class="token punctuation">,</span> keepAliveTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span> 

workQueue<span class="token punctuation">,</span> threadFactory<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>\u901A\u8FC7\u7EBF\u7A0B\u6C60\u6027\u80FD\u7A33\u5B9A\uFF0C\u4E5F\u53EF\u4EE5\u83B7\u53D6\u6267\u884C\u7ED3\u679C\uFF0C\u5E76\u6355\u83B7\u5F02\u5E38\u3002\u4F46\u662F\uFF0C\u5728\u4E1A\u52A1\u590D\u6742\u60C5\u51B5\u4E0B\uFF0C\u4E00\u4E2A\u5F02\u6B65\u8C03\u7528\u53EF\u80FD\u4F1A\u4F9D\u8D56\u4E8E\u53E6\u4E00\u4E2A\u5F02\u6B65\u8C03\u7528\u7684\u6267\u884C\u7ED3\u679C\u3002</strong></p><h3 id="_1-2\u7EBF\u7A0B\u6C60\u7684\u4E03\u5927\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_1-2\u7EBF\u7A0B\u6C60\u7684\u4E03\u5927\u53C2\u6570" aria-hidden="true">#</a> 1.2\u7EBF\u7A0B\u6C60\u7684\u4E03\u5927\u53C2\u6570</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*Params:
        corePoolSize \u2013 the number of threads to keep in the pool, even if they are idle, unless allowCoreThreadTimeOut is set
        maximumPoolSize \u2013 the maximum number of threads to allow in the pool
        keepAliveTime \u2013 when the number of threads is greater than the core, this is the maximum time that excess idle threads will wait for new tasks before terminating.
        unit \u2013 the time unit for the keepAliveTime argument
        workQueue \u2013 the queue to use for holding tasks before they are executed. This queue will hold only the Runnable tasks submitted by the execute method.
        threadFactory \u2013 the factory to use when the executor creates a new thread
        handler \u2013 the handler to use when execution is blocked because the thread bounds and queue capacities are reached
        Throws:
        IllegalArgumentException \u2013 if one of the following holds: corePoolSize &lt; 0 keepAliveTime &lt; 0 maximumPoolSize &lt;= 0 maximumPoolSize &lt; corePoolSize
NullPointerException \u2013 if workQueue or threadFactory or handler is null*/</span>
<span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                              <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                              <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span>
                              <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span>
                              <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>corePoolSize <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            maximumPoolSize <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span>
            maximumPoolSize <span class="token operator">&lt;</span> corePoolSize <span class="token operator">||</span>
            keepAliveTime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>workQueue <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> threadFactory <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> handler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>acc <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span>
                <span class="token keyword">null</span> <span class="token operator">:</span>
                <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize <span class="token operator">=</span> corePoolSize<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maximumPoolSize <span class="token operator">=</span> maximumPoolSize<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>workQueue <span class="token operator">=</span> workQueue<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveTime <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory <span class="token operator">=</span> threadFactory<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handler <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>1.<strong>corePoolSize</strong>:\u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u6C60\u4E2D\u4E00\u76F4\u4FDD\u6301\u7684\u7EBF\u7A0B\u7684\u6570\u91CF\uFF0C\u5373\u4F7F\u7EBF\u7A0B\u7A7A\u95F2\u3002\u9664\u975E\u8BBE\u7F6E\u4E86<strong>allowCoreThreadTimeOut</strong>\uFF1B</p><p>2.<strong>maximumPoolSize</strong>:\u6700\u5927\u7EBF\u7A0B\u6570\uFF0C\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u7EBF\u7A0B\u6570;</p><p>3.<strong>keepAliveTime</strong>:\u5B58\u6D3B\u65F6\u95F4\uFF0C\u5F53\u7EBF\u7A0B\u6570\u5927\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570\u7684\u65F6\u5019\uFF0C\u7EBF\u7A0B\u5728\u6700\u5927\u591A\u957F\u65F6\u95F4\u6CA1\u6709\u63A5\u5230\u65B0\u4EFB\u52A1\u5C31\u4F1A\u7EC8\u6B62\u91CA\u653E;</p><p>4.unit:\u65F6\u95F4\u5355\u4F4D</p><p>5.<strong>workQueue</strong>:\u963B\u585E\u961F\u5217\uFF0C\u7528\u6765\u5B58\u50A8\u7B49\u5F85\u6267\u884C\u7684\u4EFB\u52A1\uFF0C\u5982\u679C\u5F53\u524D\u5BF9\u7EBF\u7A0B\u7684\u9700\u6C42\u8D85\u8FC7\u4E86 corePoolSize \u5927\u5C0F\uFF0C\u5C31\u4F1A\u653E\u5728\u8FD9\u91CC\u7B49\u5F85\u7A7A\u95F2\u7EBF\u7A0B\u6267\u884C\u3002</p><p>6.threadFactory:\u521B\u5EFA\u7EBF\u7A0B\u7684\u5DE5\u5382\uFF0C\u6BD4\u5982\u6307\u5B9A\u7EBF\u7A0B\u540D\u7B49;</p><p>7.<strong>handler</strong>:\u62D2\u7EDD\u7B56\u7565\uFF0C\u5982\u679C\u7EBF\u7A0B\u6C60\u6EE1\u4E86\uFF0C\u5C31\u6267\u884C\u62D2\u7EDD\u7B56\u7565\u3002</p><p><mark>\u7EBF\u7A0B\u6C60\u7684\u8FD0\u884C\u6D41\u7A0B</mark>:</p><p>1\u3001\u7EBF\u7A0B\u6C60\u521B\u5EFA\uFF0C\u51C6\u5907\u597D <strong>corePoolSize</strong>\u6570\u91CF\u7684\u6838\u5FC3\u7EBF\u7A0B\uFF0C\u51C6\u5907\u63A5\u53D7\u4EFB\u52A1</p><p>2\u3001\u65B0\u7684\u4EFB\u52A1\u8FDB\u6765\uFF0C\u7528 <strong>corePoolSize</strong>\u51C6\u5907\u597D\u7684\u7A7A\u95F2\u7EBF\u7A0B\u6267\u884C\u3002</p><p>(1) \u3001<strong>corePoolSize</strong>\u6EE1\u4E86\uFF0C\u5C31\u5C06\u518D\u8FDB\u6765\u7684\u4EFB\u52A1\u653E\u5165\u963B\u585E\u961F\u5217\u4E2D\u3002\u7A7A\u95F2\u7684 <strong>corePoolSize</strong>\u5C31\u4F1A\u81EA\u5DF1\u53BB\u963B\u585E\u961F</p><p>\u5217\u83B7\u53D6\u4EFB\u52A1\u6267\u884C</p><p>(2) \u3001\u963B\u585E\u961F\u5217\u6EE1\u4E86\uFF0C\u5C31\u76F4\u63A5\u5F00\u65B0\u7EBF\u7A0B\u6267\u884C\uFF0C\u6700\u5927\u53EA\u80FD\u5F00\u5230 <strong>maximumPoolSize</strong>\u6307\u5B9A\u7684\u6570\u91CF</p><p>(3) \u3001<strong>maximumPoolSize</strong>\u90FD\u6267\u884C\u597D\u4E86\u3002<strong>maximumPoolSize</strong> \u6570\u91CF\u7A7A\u95F2\u7684\u7EBF\u7A0B\u4F1A\u5728 <strong>keepAliveTime</strong> \u6307\u5B9A\u7684\u65F6\u95F4\u540E\u81EA</p><p>\u52A8\u9500\u6BC1\u3002\u6700\u7EC8\u4FDD\u6301\u5230 <strong>corePoolSize</strong>\u5927\u5C0F</p><p>(4) \u3001\u5982\u679C\u7EBF\u7A0B\u6570\u5F00\u5230\u4E86 <strong>maximumPoolSize</strong>\u7684\u6570\u91CF\uFF0C\u8FD8\u6709\u65B0\u4EFB\u52A1\u8FDB\u6765\uFF0C\u5C31\u4F1A\u4F7F\u7528 <strong>handler</strong>\u6307\u5B9A\u7684\u62D2\u7EDD\u7B56</p><p>\u7565\u8FDB\u884C\u5904\u7406</p><p>3\u3001\u6240\u6709\u7684\u7EBF\u7A0B\u521B\u5EFA\u90FD\u662F\u7531\u6307\u5B9A\u7684 <strong>threadFactory</strong>\u521B\u5EFA\u7684\u3002</p><p><mark>\u9762\u8BD5\uFF1A</mark></p><p><strong>\u4E00\u4E2A\u7EBF\u7A0B\u6C60 core 7\uFF1Bmax 20 \uFF0Cqueue\uFF1A50\uFF0C100\u5E76\u53D1\u8FDB\u6765\u600E\u4E48\u5206\u914D\u7684?</strong></p><p>\u5148\u6709 7 \u4E2A\u80FD\u76F4\u63A5\u5F97\u5230\u6267\u884C\uFF0C\u63A5\u4E0B\u6765 50 \u4E2A\u8FDB\u5165\u961F\u5217\u6392\u961F\uFF0C\u5728\u591A\u5F00 13 \u4E2A\u7EE7\u7EED\u6267\u884C\u3002\u73B0\u5728 70 \u4E2A</p><p>\u88AB\u5B89\u6392\u4E0A\u4E86\u3002\u5269\u4E0B 30 \u4E2A\u9ED8\u8BA4\u62D2\u7EDD\u7B56\u7565\u3002</p><h3 id="_1-3\u5E38\u89C1\u76844\u4E2D\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#_1-3\u5E38\u89C1\u76844\u4E2D\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> 1.3\u5E38\u89C1\u76844\u4E2D\u7EBF\u7A0B\u6C60</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>        <span class="token comment">//\u7F13\u5B58\u578B\u6C60\u5B50---\u9002\u7528\u4E8E\u751F\u5B58\u671F\u5F88\u77ED\u7684\u5F02\u6B65\u4EFB\u52A1</span>
        <span class="token class-name">ExecutorService</span> newCachedThreadPool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u56FA\u5B9A\u5927\u5C0F\u7684\u7EBF\u7A0B\u6C60</span>
        <span class="token class-name">ExecutorService</span> newFixedThreadPool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8C03\u5EA6\u578B\u7EBF\u7A0B\u6C60</span>
        <span class="token class-name">ScheduledExecutorService</span> newScheduledThreadPool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5355\u4F8B\u7EBF\u7A0B---\u4EFB\u610F\u65F6\u95F4\u6C60\u4E2D\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B</span>
        <span class="token class-name">ExecutorService</span> newSingleThreadExecutor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>1.<strong>newCachedThreadPool</strong>:\u521B\u5EFA\u4E00\u4E2A\u53EF\u7F13\u5B58\u7EBF\u7A0B\u6C60\uFF0C\u5982\u679C\u7EBF\u7A0B\u6C60\u957F\u5EA6\u8D85\u8FC7\u5904\u7406\u9700\u8981\uFF0C\u53EF\u7075\u6D3B\u56DE\u6536\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u82E5</p><p>\u65E0\u53EF\u56DE\u6536\uFF0C\u5219\u65B0\u5EFA\u7EBF\u7A0B\u3002</p><p>2.<strong>newFixedThreadPool</strong> :\u521B\u5EFA\u4E00\u4E2A\u5B9A\u957F\u7EBF\u7A0B\u6C60\uFF0C\u53EF\u63A7\u5236\u7EBF\u7A0B\u6700\u5927\u5E76\u53D1\u6570\uFF0C\u8D85\u51FA\u7684\u7EBF\u7A0B\u4F1A\u5728\u961F\u5217\u4E2D\u7B49\u5F85\u3002</p><p>3.<strong>newScheduledThreadPool</strong> :\u521B\u5EFA\u4E00\u4E2A\u5B9A\u957F\u7EBF\u7A0B\u6C60\uFF0C\u652F\u6301\u5B9A\u65F6\u53CA\u5468\u671F\u6027\u4EFB\u52A1\u6267\u884C\u3002</p><p>4.<strong>newSingleThreadExecutor</strong> :\u521B\u5EFA\u4E00\u4E2A\u5355\u7EBF\u7A0B\u5316\u7684\u7EBF\u7A0B\u6C60\uFF0C\u5B83\u53EA\u4F1A\u7528\u552F\u4E00\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\uFF0C\u4FDD\u8BC1\u6240\u6709\u4EFB\u52A1</p><p>\u6309\u7167\u6307\u5B9A\u987A\u5E8F(FIFO, LIFO, \u4F18\u5148\u7EA7)\u6267\u884C\u3002</p><h3 id="_1-4\u4F7F\u7528\u7EBF\u7A0B\u6C60\u7684\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#_1-4\u4F7F\u7528\u7EBF\u7A0B\u6C60\u7684\u4F18\u70B9" aria-hidden="true">#</a> 1.4\u4F7F\u7528\u7EBF\u7A0B\u6C60\u7684\u4F18\u70B9</h3><p><strong>1.\u964D\u4F4E\u8D44\u6E90\u7684\u6D88\u8017</strong>:\u901A\u8FC7\u91CD\u590D\u5229\u7528\u5DF2\u7ECF\u521B\u5EFA\u597D\u7684\u7EBF\u7A0B\u964D\u4F4E\u7EBF\u7A0B\u7684\u521B\u5EFA\u548C\u9500\u6BC1\u5E26\u6765\u7684\u635F\u8017</p><p><strong>2.\u63D0\u9AD8\u54CD\u5E94\u901F\u5EA6</strong>:\u56E0\u4E3A\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u6570\u6CA1\u6709\u8D85\u8FC7\u7EBF\u7A0B\u6C60\u7684\u6700\u5927\u4E0A\u9650\u65F6\uFF0C\u6709\u7684\u7EBF\u7A0B\u5904\u4E8E\u7B49\u5F85\u5206\u914D\u4EFB\u52A1</p><p>\u7684\u72B6\u6001\uFF0C\u5F53\u4EFB\u52A1\u6765\u65F6\u65E0\u9700\u521B\u5EFA\u65B0\u7684\u7EBF\u7A0B\u5C31\u80FD\u6267\u884C</p><p><strong>3.\u63D0\u9AD8\u7EBF\u7A0B\u7684\u53EF\u7BA1\u7406\u6027</strong>:\u7EBF\u7A0B\u6C60\u4F1A\u6839\u636E\u5F53\u524D\u7CFB\u7EDF\u7279\u70B9\u5BF9\u6C60\u5185\u7684\u7EBF\u7A0B\u8FDB\u884C\u4F18\u5316\u5904\u7406\uFF0C\u51CF\u5C11\u521B\u5EFA\u548C\u9500\u6BC1\u7EBF\u7A0B\u5E26\u6765</p><p>\u7684\u7CFB\u7EDF\u5F00\u9500\u3002\u65E0\u9650\u7684\u521B\u5EFA\u548C\u9500\u6BC1\u7EBF\u7A0B\u4E0D\u4EC5\u6D88\u8017\u7CFB\u7EDF\u8D44\u6E90\uFF0C\u8FD8\u964D\u4F4E\u7CFB\u7EDF\u7684\u7A33\u5B9A\u6027\uFF0C\u4F7F</p><p>\u7528\u7EBF\u7A0B\u6C60\u8FDB\u884C\u7EDF\u4E00\u5206\u914D</p><h2 id="_2-completablefuture\u5F02\u6B65\u7F16\u6392" tabindex="-1"><a class="header-anchor" href="#_2-completablefuture\u5F02\u6B65\u7F16\u6392" aria-hidden="true">#</a> 2.CompletableFuture\u5F02\u6B65\u7F16\u6392</h2><h3 id="_2-1\u521B\u5EFA\u5F02\u6B65\u7F16\u6392\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-1\u521B\u5EFA\u5F02\u6B65\u7F16\u6392\u5BF9\u8C61" aria-hidden="true">#</a> 2.1\u521B\u5EFA\u5F02\u6B65\u7F16\u6392\u5BF9\u8C61</h3><p>CompletableFuture \u63D0\u4F9B\u4E86\u56DB\u4E2A\u9759\u6001\u65B9\u6CD5\u6765\u521B\u5EFA\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Returns a new CompletableFuture that is asynchronously completed
     * by a task running in the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">ForkJoinPool</span><span class="token punctuation">#</span><span class="token function">commonPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> after
     * it runs the given action.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">runnable</span> the action to run before completing the
     * returned CompletableFuture
     * <span class="token keyword">@return</span> the new CompletableFuture
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">asyncRunStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> runnable<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Returns a new CompletableFuture that is asynchronously completed
     * by a task running in the given executor after it runs the given
     * action.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">runnable</span> the action to run before completing the
     * returned CompletableFuture
     * <span class="token keyword">@param</span> <span class="token parameter">executor</span> the executor to use for asynchronous execution
     * <span class="token keyword">@return</span> the new CompletableFuture
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">,</span>
                                                   <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">asyncRunStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> runnable<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Returns a new CompletableFuture that is asynchronously completed
     * by a task running in the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">ForkJoinPool</span><span class="token punctuation">#</span><span class="token function">commonPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> with
     * the value obtained by calling the given Supplier.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">supplier</span> a function returning the value to be used
     * to complete the returned CompletableFuture
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">&lt;</span>U<span class="token punctuation">&gt;</span></span> the function&#39;s return type
     * <span class="token keyword">@return</span> the new CompletableFuture
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> supplier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">asyncSupplyStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> supplier<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Returns a new CompletableFuture that is asynchronously completed
     * by a task running in the given executor with the value obtained
     * by calling the given Supplier.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">supplier</span> a function returning the value to be used
     * to complete the returned CompletableFuture
     * <span class="token keyword">@param</span> <span class="token parameter">executor</span> the executor to use for asynchronous execution
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">&lt;</span>U<span class="token punctuation">&gt;</span></span> the function&#39;s return type
     * <span class="token keyword">@return</span> the new CompletableFuture
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> supplier<span class="token punctuation">,</span>
                                                       <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">asyncSupplyStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> supplier<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><p>1\u3001runXxxx \u90FD\u662F\u6CA1\u6709\u8FD4\u56DE\u7ED3\u679C\u7684\uFF0CsupplyXxx \u90FD\u662F\u53EF\u4EE5\u83B7\u53D6\u8FD4\u56DE\u7ED3\u679C\u7684</p><p>2\u3001\u53EF\u4EE5\u4F20\u5165\u81EA\u5B9A\u4E49\u7684\u7EBF\u7A0B\u6C60\uFF0C\u5426\u5219\u5C31\u7528\u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60\uFF1B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestCompletableFuture</span> <span class="token punctuation">{</span>

<span class="token comment">//    @Autowired</span>
<span class="token comment">//    private static ThreadPoolExecutor threadPoolExecutor;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**
         * \u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u7F16\u6392
         */</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> completableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u7F16\u6392&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * \u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u7F16\u6392
         */</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringCompletableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u7F16\u6392&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stringCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="_2-2\u8BA1\u7B97\u5B8C\u6210\u65F6\u56DE\u8C03\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-2\u8BA1\u7B97\u5B8C\u6210\u65F6\u56DE\u8C03\u65B9\u6CD5" aria-hidden="true">#</a> 2.2\u8BA1\u7B97\u5B8C\u6210\u65F6\u56DE\u8C03\u65B9\u6CD5</h3><p>whenComplete \u53EF\u4EE5\u5904\u7406\u6B63\u5E38\u548C\u5F02\u5E38\u7684\u8BA1\u7B97\u7ED3\u679C\uFF0Cexceptionally \u5904\u7406\u5F02\u5E38\u60C5\u51B5\u3002</p><p>whenComplete \u548C whenCompleteAsync \u7684\u533A\u522B\uFF1A</p><p>\u200B whenComplete\uFF1A\u662F\u6267\u884C\u5F53\u524D\u4EFB\u52A1\u7684\u7EBF\u7A0B\u6267\u884C\u7EE7\u7EED\u6267\u884C whenComplete \u7684\u4EFB\u52A1\u3002</p><p>\u200B whenCompleteAsync\uFF1A\u662F\u6267\u884C\u628A whenCompleteAsync \u8FD9\u4E2A\u4EFB\u52A1\u7EE7\u7EED\u63D0\u4EA4\u7ED9\u7EBF\u7A0B\u6C60 \u6765\u8FDB\u884C\u6267\u884C\u3002</p><p><strong>\u65B9\u6CD5\u4E0D\u4EE5</strong> <strong>Async</strong> <strong>\u7ED3\u5C3E\uFF0C\u610F\u5473\u7740</strong> <strong>Action</strong> <strong>\u4F7F\u7528\u76F8\u540C\u7684\u7EBF\u7A0B\u6267\u884C\uFF0C\u800C</strong> <strong>Async</strong> <strong>\u53EF\u80FD\u4F1A\u4F7F\u7528\u5176\u4ED6\u7EBF\u7A0B</strong></p><p><strong>\u6267\u884C\uFF08\u5982\u679C\u662F\u4F7F\u7528\u76F8\u540C\u7684\u7EBF\u7A0B\u6C60\uFF0C\u4E5F\u53EF\u80FD\u4F1A\u88AB\u540C\u4E00\u4E2A\u7EBF\u7A0B\u9009\u4E2D\u6267\u884C\uFF09</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">whenComplete</span><span class="token punctuation">(</span>
        <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniWhenCompleteStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">whenCompleteAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniWhenCompleteStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">whenCompleteAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">,</span> <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniWhenCompleteStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">exceptionally</span><span class="token punctuation">(</span>
        <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniExceptionallyStage</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestWhenComplete</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * \u8BA1\u7B97\u5B8C\u6210\u65F6\u56DE\u8C03\u65B9\u6CD5
         */</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringCompletableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span><span class="token number">0</span> <span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u7F16\u6392&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenComplete</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>excption<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            res <span class="token operator">=</span> <span class="token string">&quot;whencomplete&quot;</span><span class="token punctuation">;</span>
            <span class="token comment">//\u867D\u7136\u80FD\u5F97\u5230\u5F02\u5E38\u4FE1\u606F\uFF0C\u4F46\u662F\u6CA1\u6CD5\u4FEE\u6539\u8FD4\u56DE\u6570\u636E</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u6B65\u7F16\u6392\u4EFB\u52A1\u5B8C\u6210\u65F6\uFF0C\u8FD4\u56DE\u7ED3\u679C\u662F:&quot;</span>  <span class="token operator">+</span> res <span class="token operator">+</span> <span class="token string">&quot;,\u5F02\u5E38\u662F:&quot;</span> <span class="token operator">+</span> excption<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionally</span><span class="token punctuation">(</span>throwable <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u51FA\u73B0\u5F02\u5E38\uFF0C\u540C\u4E8B\u8FD4\u56DE\u9ED8\u8BA4\u503C</span>
            <span class="token keyword">return</span> <span class="token string">&quot;\u51FA\u73B0\u5F02\u5E38&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stringCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="_2-3handle\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-3handle\u65B9\u6CD5" aria-hidden="true">#</a> 2.3handle\u65B9\u6CD5</h3><p>\u548C complete \u4E00\u6837\uFF0C\u53EF\u5BF9\u7ED3\u679C\u505A\u6700\u540E\u7684\u5904\u7406\uFF08\u53EF\u5904\u7406\u5F02\u5E38\uFF09\uFF0C\u53EF\u6539\u53D8\u8FD4\u56DE\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">handle</span><span class="token punctuation">(</span>
        <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniHandleStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniHandleStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">,</span> <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniHandleStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestHandle</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> handle <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FD0\u884C\u7ED3\u679C:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> exception<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> res <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>exception <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u7EC8\u7ED3\u679C:&quot;</span> <span class="token operator">+</span> handle<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_2-4\u7EBF\u7A0B\u4E32\u884C\u5316\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-4\u7EBF\u7A0B\u4E32\u884C\u5316\u65B9\u6CD5" aria-hidden="true">#</a> 2.4\u7EBF\u7A0B\u4E32\u884C\u5316\u65B9\u6CD5</h3><h4 id="_1-thenrun\u65B9\u6CD5-\u53EA\u8981\u4E4B\u524D\u7684\u4EFB\u52A1\u6267\u884C\u5B8C\u6210-\u5C31\u5F00\u59CB\u6267\u884C-thenrun-\u53EA\u662F\u5904\u7406\u5B8C\u4EFB\u52A1\u540E-\u6267\u884Cthenrun-\u7684\u540E\u7EED\u64CD\u4F5C-\u5E26\u6709-async-\u9ED8\u8BA4\u662F\u5F02\u6B65\u6267\u884C\u7684" tabindex="-1"><a class="header-anchor" href="#_1-thenrun\u65B9\u6CD5-\u53EA\u8981\u4E4B\u524D\u7684\u4EFB\u52A1\u6267\u884C\u5B8C\u6210-\u5C31\u5F00\u59CB\u6267\u884C-thenrun-\u53EA\u662F\u5904\u7406\u5B8C\u4EFB\u52A1\u540E-\u6267\u884Cthenrun-\u7684\u540E\u7EED\u64CD\u4F5C-\u5E26\u6709-async-\u9ED8\u8BA4\u662F\u5F02\u6B65\u6267\u884C\u7684" aria-hidden="true">#</a> 1.thenRun\u65B9\u6CD5:\u53EA\u8981\u4E4B\u524D\u7684\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\uFF0C\u5C31\u5F00\u59CB\u6267\u884C thenRun\uFF0C\u53EA\u662F\u5904\u7406\u5B8C\u4EFB\u52A1\u540E\uFF0C\u6267\u884CthenRun \u7684\u540E\u7EED\u64CD\u4F5C\uFF0C\u5E26\u6709 Async \u9ED8\u8BA4\u662F\u5F02\u6B65\u6267\u884C\u7684;</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenRun</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniRunStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenRunAsync</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniRunStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenRunAsync</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> action<span class="token punctuation">,</span>
                                                <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniRunStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_2-thenaccept-\u65B9\u6CD5-\u6D88\u8D39\u5904\u7406\u7ED3\u679C\u3002\u63A5\u6536\u4E0A\u4E2A\u4EFB\u52A1\u7684\u5904\u7406\u7ED3\u679C-\u5E76\u6D88\u8D39\u5904\u7406-\u65E0\u8FD4\u56DE\u7ED3\u679C-\u5E26\u6709-async-\u9ED8\u8BA4\u662F\u5F02\u6B65\u6267\u884C\u7684" tabindex="-1"><a class="header-anchor" href="#_2-thenaccept-\u65B9\u6CD5-\u6D88\u8D39\u5904\u7406\u7ED3\u679C\u3002\u63A5\u6536\u4E0A\u4E2A\u4EFB\u52A1\u7684\u5904\u7406\u7ED3\u679C-\u5E76\u6D88\u8D39\u5904\u7406-\u65E0\u8FD4\u56DE\u7ED3\u679C-\u5E26\u6709-async-\u9ED8\u8BA4\u662F\u5F02\u6B65\u6267\u884C\u7684" aria-hidden="true">#</a> 2.thenAccept \u65B9\u6CD5:\u6D88\u8D39\u5904\u7406\u7ED3\u679C\u3002\u63A5\u6536\u4E0A\u4E2A\u4EFB\u52A1\u7684\u5904\u7406\u7ED3\u679C\uFF0C\u5E76\u6D88\u8D39\u5904\u7406\uFF0C\u65E0\u8FD4\u56DE\u7ED3\u679C\uFF0C\u5E26\u6709 Async \u9ED8\u8BA4\u662F\u5F02\u6B65\u6267\u884C\u7684;</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenAccept</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniAcceptStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenAcceptAsync</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniAcceptStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenAcceptAsync</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">,</span>
                                                   <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">uniAcceptStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_3-thenapply-\u65B9\u6CD5-\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u4F9D\u8D56\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u65F6-\u83B7\u53D6\u4E0A\u4E00\u4E2A\u4EFB\u52A1\u8FD4\u56DE\u7684\u7ED3\u679C-\u5E76\u8FD4\u56DE\u5F53\u524D\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_3-thenapply-\u65B9\u6CD5-\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u4F9D\u8D56\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u65F6-\u83B7\u53D6\u4E0A\u4E00\u4E2A\u4EFB\u52A1\u8FD4\u56DE\u7684\u7ED3\u679C-\u5E76\u8FD4\u56DE\u5F53\u524D\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 3.thenApply \u65B9\u6CD5\uFF1A\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u4F9D\u8D56\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u65F6\uFF0C\u83B7\u53D6\u4E0A\u4E00\u4E2A\u4EFB\u52A1\u8FD4\u56DE\u7684\u7ED3\u679C\uFF0C\u5E76\u8FD4\u56DE\u5F53\u524D\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C;</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenApply</span><span class="token punctuation">(</span>
    <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">uniApplyStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenApplyAsync</span><span class="token punctuation">(</span>
    <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">uniApplyStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenApplyAsync</span><span class="token punctuation">(</span>
    <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">,</span> <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">uniApplyStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4EE5\u4E0A\u90FD\u8981\u524D\u7F6E\u4EFB\u52A1\u6210\u529F\u5B8C\u6210\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token comment">//T\uFF1A\u4E0A\u4E00\u4E2A\u4EFB\u52A1\u8FD4\u56DE\u7ED3\u679C\u7684\u7C7B\u578BU\uFF1A\u5F53\u524D\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThen</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integerCompletableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7ED3\u679Ci=&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span>
<span class="token comment">//        .thenRunAsync(()-&gt;{</span>
<span class="token comment">//            System.out.println(&quot;\u5F53\u524D\u7EBF\u7A0B:&quot; + Thread.currentThread().getName());</span>
<span class="token comment">//            System.out.println(&quot;\u4E4B\u524D\u4EFB\u52A1\u5DF2\u5B8C\u6210\uFF0C\u5F00\u542F\u65B0\u4EFB\u52A1...&quot;);</span>
<span class="token comment">//        },executor);</span>
<span class="token comment">//        .thenAcceptAsync((t) -&gt; {</span>
<span class="token comment">//            System.out.println(&quot;\u5F53\u524D\u7EBF\u7A0B:&quot; + Thread.currentThread().getName());</span>
<span class="token comment">//            System.out.println(&quot;\u7ED3\u679Ci2=&quot; + t/2);</span>
<span class="token comment">//        },executor);</span>
                <span class="token punctuation">.</span><span class="token function">thenApplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0A\u4E2A\u4EFB\u52A1\u7ED3\u679Ci=&quot;</span> <span class="token operator">+</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> t <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Integer</span> i <span class="token operator">=</span> integerCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E8C\u6B21\u4EFB\u52A1\u7ED3\u679Ci=&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="_2-5\u4E24\u4EFB\u52A1\u7EC4\u5408-\u90FD\u8981\u5B8C\u6210" tabindex="-1"><a class="header-anchor" href="#_2-5\u4E24\u4EFB\u52A1\u7EC4\u5408-\u90FD\u8981\u5B8C\u6210" aria-hidden="true">#</a> 2.5\u4E24\u4EFB\u52A1\u7EC4\u5408---\u90FD\u8981\u5B8C\u6210</h3><p>\u4E24\u4E2A\u4EFB\u52A1\u5FC5\u987B\u90FD\u5B8C\u6210\uFF0C\u89E6\u53D1\u8BE5\u4EFB\u52A1\u3002</p><h4 id="_1-runafterboth-\u7EC4\u5408\u4E24\u4E2A-future-\u4E0D\u9700\u8981\u83B7\u53D6-future-\u7684\u7ED3\u679C-\u53EA\u9700\u4E24\u4E2A-future-\u5904\u7406\u5B8C\u4EFB\u52A1\u540E-\u5904\u7406\u8BE5\u4EFB\u52A1\u3002" tabindex="-1"><a class="header-anchor" href="#_1-runafterboth-\u7EC4\u5408\u4E24\u4E2A-future-\u4E0D\u9700\u8981\u83B7\u53D6-future-\u7684\u7ED3\u679C-\u53EA\u9700\u4E24\u4E2A-future-\u5904\u7406\u5B8C\u4EFB\u52A1\u540E-\u5904\u7406\u8BE5\u4EFB\u52A1\u3002" aria-hidden="true">#</a> 1.runAfterBoth:\u7EC4\u5408\u4E24\u4E2A future\uFF0C\u4E0D\u9700\u8981\u83B7\u53D6 future \u7684\u7ED3\u679C\uFF0C\u53EA\u9700\u4E24\u4E2A future \u5904\u7406\u5B8C\u4EFB\u52A1\u540E\uFF0C\u5904\u7406\u8BE5\u4EFB\u52A1\u3002</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAfterBoth</span><span class="token punctuation">(</span><span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
                                                <span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biRunStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAfterBothAsync</span><span class="token punctuation">(</span><span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
                                                     <span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biRunStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAfterBothAsync</span><span class="token punctuation">(</span><span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
                                                     <span class="token class-name">Runnable</span> action<span class="token punctuation">,</span>
                                                     <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biRunStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="_2-thenacceptboth-\u7EC4\u5408\u4E24\u4E2A-future-\u83B7\u53D6\u4E24\u4E2A-future-\u4EFB\u52A1\u7684\u8FD4\u56DE\u7ED3\u679C-\u7136\u540E\u5904\u7406\u4EFB\u52A1-\u6CA1\u6709\u8FD4\u56DE\u503C\u3002" tabindex="-1"><a class="header-anchor" href="#_2-thenacceptboth-\u7EC4\u5408\u4E24\u4E2A-future-\u83B7\u53D6\u4E24\u4E2A-future-\u4EFB\u52A1\u7684\u8FD4\u56DE\u7ED3\u679C-\u7136\u540E\u5904\u7406\u4EFB\u52A1-\u6CA1\u6709\u8FD4\u56DE\u503C\u3002" aria-hidden="true">#</a> 2.thenAcceptBoth:\u7EC4\u5408\u4E24\u4E2A future\uFF0C\u83B7\u53D6\u4E24\u4E2A future \u4EFB\u52A1\u7684\u8FD4\u56DE\u7ED3\u679C\uFF0C\u7136\u540E\u5904\u7406\u4EFB\u52A1\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenAcceptBoth</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
        <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biAcceptStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenAcceptBothAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
        <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biAcceptStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenAcceptBothAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
        <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">,</span> <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biAcceptStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="_3-thencombine-\u7EC4\u5408\u4E24\u4E2A-future-\u83B7\u53D6\u4E24\u4E2A-future-\u7684\u8FD4\u56DE\u7ED3\u679C-\u5E76\u8FD4\u56DE\u5F53\u524D\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_3-thencombine-\u7EC4\u5408\u4E24\u4E2A-future-\u83B7\u53D6\u4E24\u4E2A-future-\u7684\u8FD4\u56DE\u7ED3\u679C-\u5E76\u8FD4\u56DE\u5F53\u524D\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 3.thenCombine:\u7EC4\u5408\u4E24\u4E2A future\uFF0C\u83B7\u53D6\u4E24\u4E2A future \u7684\u8FD4\u56DE\u7ED3\u679C\uFF0C\u5E76\u8FD4\u56DE\u5F53\u524D\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C;</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenCombine</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
        <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">U</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biApplyStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenCombineAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
        <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">U</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biApplyStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> other<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">thenCombineAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
        <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">U</span><span class="token punctuation">,</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">,</span> <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">biApplyStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBoth</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u5F02\u6B65\u4EFB\u52A1\u4E24\u4E2A\u90FD\u5B8C\u6210
         */</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;mian...start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> future01 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A11\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future02 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A12\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        future01.runAfterBothAsync(future02,() -&gt;{</span>
<span class="token comment">//            System.out.println(&quot;\u4EFB\u52A13\u5F00\u59CB...&quot;);</span>
<span class="token comment">//        }, executor);</span>

<span class="token comment">//        future01.thenAcceptBothAsync(future02, (f1,f2) -&gt; {</span>
<span class="token comment">//            System.out.println(&quot;\u4EFB\u52A13\u5F00\u59CB...&quot; + f1 + &quot;--&gt;&quot; + f2);</span>
<span class="token comment">//        }, executor);</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future03 <span class="token operator">=</span> future01<span class="token punctuation">.</span><span class="token function">thenCombineAsync</span><span class="token punctuation">(</span>future02<span class="token punctuation">,</span> <span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A13\u5F00\u59CB...&quot;</span> <span class="token operator">+</span> f1 <span class="token operator">+</span> <span class="token string">&quot;--&gt;&quot;</span> <span class="token operator">+</span> f2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;\u54C8\u54C8\u54C8&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> s <span class="token operator">=</span> future03<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A13\u8FD0\u884C\u7ED3\u679C:&quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="_2-6\u4E24\u4EFB\u52A1\u7EC4\u5408-\u4E00\u4E2A\u5B8C\u6210" tabindex="-1"><a class="header-anchor" href="#_2-6\u4E24\u4EFB\u52A1\u7EC4\u5408-\u4E00\u4E2A\u5B8C\u6210" aria-hidden="true">#</a> 2.6\u4E24\u4EFB\u52A1\u7EC4\u5408---\u4E00\u4E2A\u5B8C\u6210</h3><p>\u5F53\u4E24\u4E2A\u4EFB\u52A1\u4E2D\uFF0C\u4EFB\u610F\u4E00\u4E2A future \u4EFB\u52A1\u5B8C\u6210\u7684\u65F6\u5019\uFF0C\u6267\u884C\u4EFB\u52A1\u3002</p><h4 id="_1-runaftereither-\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210-\u4E0D\u9700\u8981\u83B7\u53D6-future-\u7684\u7ED3\u679C-\u5904\u7406\u4EFB\u52A1-\u4E5F\u6CA1\u6709\u8FD4" tabindex="-1"><a class="header-anchor" href="#_1-runaftereither-\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210-\u4E0D\u9700\u8981\u83B7\u53D6-future-\u7684\u7ED3\u679C-\u5904\u7406\u4EFB\u52A1-\u4E5F\u6CA1\u6709\u8FD4" aria-hidden="true">#</a> 1.runAfterEither:\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210\uFF0C\u4E0D\u9700\u8981\u83B7\u53D6 future \u7684\u7ED3\u679C\uFF0C\u5904\u7406\u4EFB\u52A1\uFF0C\u4E5F\u6CA1\u6709\u8FD4</h4><p>\u56DE\u503C;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAfterEither</span><span class="token punctuation">(</span><span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
                                                  <span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orRunStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAfterEitherAsync</span><span class="token punctuation">(</span><span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
                                                       <span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orRunStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">runAfterEitherAsync</span><span class="token punctuation">(</span><span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span>
                                                       <span class="token class-name">Runnable</span> action<span class="token punctuation">,</span>
                                                       <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orRunStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="_2-accepteither-\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210-\u83B7\u53D6\u5B83\u7684\u8FD4\u56DE\u503C-\u5904\u7406\u4EFB\u52A1-\u6CA1\u6709\u65B0\u7684\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_2-accepteither-\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210-\u83B7\u53D6\u5B83\u7684\u8FD4\u56DE\u503C-\u5904\u7406\u4EFB\u52A1-\u6CA1\u6709\u65B0\u7684\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 2.acceptEither:\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210\uFF0C\u83B7\u53D6\u5B83\u7684\u8FD4\u56DE\u503C\uFF0C\u5904\u7406\u4EFB\u52A1\uFF0C\u6CA1\u6709\u65B0\u7684\u8FD4\u56DE\u503C;</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">acceptEither</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orAcceptStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">acceptEitherAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orAcceptStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">acceptEitherAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">,</span>
        <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orAcceptStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="_3-applytoeither-\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210-\u83B7\u53D6\u5B83\u7684\u8FD4\u56DE\u503C-\u5904\u7406\u4EFB\u52A1\u5E76\u6709\u65B0\u7684\u8FD4\u56DE\u503C\u3002" tabindex="-1"><a class="header-anchor" href="#_3-applytoeither-\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210-\u83B7\u53D6\u5B83\u7684\u8FD4\u56DE\u503C-\u5904\u7406\u4EFB\u52A1\u5E76\u6709\u65B0\u7684\u8FD4\u56DE\u503C\u3002" aria-hidden="true">#</a> 3.applyToEither\uFF1A\u4E24\u4E2A\u4EFB\u52A1\u6709\u4E00\u4E2A\u6267\u884C\u5B8C\u6210\uFF0C\u83B7\u53D6\u5B83\u7684\u8FD4\u56DE\u503C\uFF0C\u5904\u7406\u4EFB\u52A1\u5E76\u6709\u65B0\u7684\u8FD4\u56DE\u503C\u3002</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">applyToEither</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orApplyStage</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">applyToEitherAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orApplyStage</span><span class="token punctuation">(</span>asyncPool<span class="token punctuation">,</span> other<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> <span class="token function">applyToEitherAsync</span><span class="token punctuation">(</span>
        <span class="token class-name">CompletionStage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">U</span><span class="token punctuation">&gt;</span></span> fn<span class="token punctuation">,</span>
        <span class="token class-name">Executor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orApplyStage</span><span class="token punctuation">(</span><span class="token function">screenExecutor</span><span class="token punctuation">(</span>executor<span class="token punctuation">)</span><span class="token punctuation">,</span> other<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEither</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> future01 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A11...\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> future02 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A12...\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A12...\u7ED3\u675F...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        future01.runAfterEitherAsync(future02,() -&gt; {</span>
<span class="token comment">//            System.out.println(&quot;\u4EFB\u52A13...\u5F00\u59CB...&quot;);</span>
<span class="token comment">//            System.out.println(&quot;\u5F53\u524D\u7EBF\u7A0B:&quot; + Thread.currentThread().getName());</span>
<span class="token comment">//        }, executor);</span>

<span class="token comment">//        future01.acceptEitherAsync(future02, (res) -&gt; {</span>
<span class="token comment">//            System.out.println(&quot;\u4EFB\u52A13...\u5F00\u59CB...\u4EFB\u52A11\u6216\u4EFB\u52A12\u7684\u7ED3\u679C\u662F:&quot; + res);</span>
<span class="token comment">//            System.out.println(&quot;\u5F53\u524D\u7EBF\u7A0B:&quot; + Thread.currentThread().getName());</span>
<span class="token comment">//        }, executor);</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future03 <span class="token operator">=</span> future01<span class="token punctuation">.</span><span class="token function">applyToEitherAsync</span><span class="token punctuation">(</span>future02<span class="token punctuation">,</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A13...\u5F00\u59CB...\u4EFB\u52A11\u6216\u4EFB\u52A12\u7684\u7ED3\u679C\u662F:&quot;</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u7EBF\u7A0B:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;\u54C8\u54C8&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> s <span class="token operator">=</span> future03<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A13\u8FD0\u884C\u7ED3\u679C:&quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h3 id="_2-7\u591A\u4EFB\u52A1\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#_2-7\u591A\u4EFB\u52A1\u7EC4\u5408" aria-hidden="true">#</a> 2.7\u591A\u4EFB\u52A1\u7EC4\u5408</h3><h4 id="_1-allof-\u7B49\u5F85\u6240\u6709\u4EFB\u52A1\u5B8C\u6210" tabindex="-1"><a class="header-anchor" href="#_1-allof-\u7B49\u5F85\u6240\u6709\u4EFB\u52A1\u5B8C\u6210" aria-hidden="true">#</a> 1.allOf:\u7B49\u5F85\u6240\u6709\u4EFB\u52A1\u5B8C\u6210 ;</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Returns a new CompletableFuture that is completed when all of
     * the given CompletableFutures complete.  If any of the given
     * CompletableFutures complete exceptionally, then the returned
     * CompletableFuture also does so, with a CompletionException
     * holding this exception as its cause.  Otherwise, the results,
     * if any, of the given CompletableFutures are not reflected in
     * the returned CompletableFuture, but may be obtained by
     * inspecting them individually. If no CompletableFutures are
     * provided, returns a CompletableFuture completed with the value
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>.
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Among the applications of this method is to await completion
     * of a set of independent CompletableFutures before continuing a
     * program, as in: <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span></span>
     * <span class="token code language-java">c3<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token punctuation">}</span>.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">cfs</span> the CompletableFutures
     * <span class="token keyword">@return</span> a new CompletableFuture that is completed when all of the
     * given CompletableFutures complete
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the array or any of its elements are
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">allOf</span><span class="token punctuation">(</span><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> cfs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">andTree</span><span class="token punctuation">(</span>cfs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cfs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="_2-anyof-\u53EA\u8981\u6709\u4E00\u4E2A\u4EFB\u52A1\u5B8C\u6210" tabindex="-1"><a class="header-anchor" href="#_2-anyof-\u53EA\u8981\u6709\u4E00\u4E2A\u4EFB\u52A1\u5B8C\u6210" aria-hidden="true">#</a> 2.anyOf:\u53EA\u8981\u6709\u4E00\u4E2A\u4EFB\u52A1\u5B8C\u6210;</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Returns a new CompletableFuture that is completed when any of
     * the given CompletableFutures complete, with the same result.
     * Otherwise, if it completed exceptionally, the returned
     * CompletableFuture also does so, with a CompletionException
     * holding this exception as its cause.  If no CompletableFutures
     * are provided, returns an incomplete CompletableFuture.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">cfs</span> the CompletableFutures
     * <span class="token keyword">@return</span> a new CompletableFuture that is completed with the
     * result or exception of any of the given CompletableFutures when
     * one completes
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the array or any of its elements are
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">anyOf</span><span class="token punctuation">(</span><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> cfs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">orTree</span><span class="token punctuation">(</span>cfs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cfs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAll</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...start..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future01 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A11...\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;01&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future02 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A12...\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;02&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future03 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A13...\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;03&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future04 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A14...\u5F00\u59CB...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;04&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        CompletableFuture&lt;Void&gt; allOf = CompletableFuture.allOf(future01, future02, future03, future04);</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> anyOf <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">anyOf</span><span class="token punctuation">(</span>future01<span class="token punctuation">,</span> future02<span class="token punctuation">,</span> future03<span class="token punctuation">,</span> future04<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;anyOf:&quot;</span> <span class="token operator">+</span> anyOf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main...end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div>`,112);function t(e,c){return p}var l=n(a,[["render",t],["__file","CompletableFuture.html.vue"]]);export{l as default};
